{"version":3,"sources":["components/PromotionalHeader.js","components/ResultCard.js","App.js","serviceWorker.js","index.js"],"names":["PromotionalHeader","react_default","a","createElement","className","src","alt","id","href","rel","target","Component","ResultCard","Card_default","CardContent_default","index_es","variant","this","props","title","Table_default","TableHead_default","TableRow_default","TableCell_default","numeric","TableBody_default","data","map","n","k","key","component","scope","name","score","App","components_PromotionalHeader","Grid_default","container","spacing","justify","item","xs","md","lg","components_ResultCard","Boolean","window","location","hostname","match","ReactDOM","render","src_App_0","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister"],"mappings":"yQAgBeA,mLAZX,OACEC,EAAAC,EAAAC,cAAA,OAAKC,UAAU,qBACbH,EAAAC,EAAAC,cAAA,OAAKE,IAAI,iBAAiBC,IAAI,oBAAoBC,GAAG,SACrDN,EAAAC,EAAAC,cAAA,mCACAF,EAAAC,EAAAC,cAAA,KAAGK,KAAK,wGAAwGC,IAAI,sBAAsBC,OAAO,UAC/IT,EAAAC,EAAAC,cAAA,OAAKE,IAAI,iBAAiBC,IAAI,aAAaC,GAAG,mBAPxBI,sKCwCjBC,mLA9BX,OACEX,EAAAC,EAAAC,cAACU,EAAAX,EAAD,KACED,EAAAC,EAAAC,cAACW,EAAAZ,EAAD,KACED,EAAAC,EAAAC,cAACY,EAAA,EAAD,CAAYC,QAAQ,YAAYC,KAAKC,MAAMC,OAC3ClB,EAAAC,EAAAC,cAACiB,EAAAlB,EAAD,KACED,EAAAC,EAAAC,cAACkB,EAAAnB,EAAD,KACED,EAAAC,EAAAC,cAACmB,EAAApB,EAAD,KACED,EAAAC,EAAAC,cAACoB,EAAArB,EAAD,aACAD,EAAAC,EAAAC,cAACoB,EAAArB,EAAD,CAAWsB,SAAO,GAAlB,sBAGJvB,EAAAC,EAAAC,cAACsB,EAAAvB,EAAD,KACGe,KAAKC,MAAMQ,KAAKC,IAAI,SAACC,EAAEC,GACtB,OACE5B,EAAAC,EAAAC,cAACmB,EAAApB,EAAD,CAAU4B,IAAKD,GACb5B,EAAAC,EAAAC,cAACoB,EAAArB,EAAD,CAAW6B,UAAU,KAAKC,MAAM,OAC7BJ,EAAEK,MAELhC,EAAAC,EAAAC,cAACoB,EAAArB,EAAD,CAAWsB,SAAO,GAAEI,EAAEM,qBApBjBvB,aCyBVwB,mLA3BX,OACElC,EAAAC,EAAAC,cAAA,OAAKC,UAAU,OACbH,EAAAC,EAAAC,cAACiC,EAAD,MACAnC,EAAAC,EAAAC,cAACkC,EAAAnC,EAAD,CAAMoC,WAAS,EAACC,QAAS,EAAGC,QAAS,SAAUjC,GAAG,WAChDN,EAAAC,EAAAC,cAACkC,EAAAnC,EAAD,CAAMuC,MAAI,EAACC,GAAI,GAAIC,GAAI,EAAGC,GAAI,GAC5B3C,EAAAC,EAAAC,cAAC0C,EAAD,CAAY1B,MAAM,kCAAkCO,KAAM,CACxD,CAACO,KAAM,kBAAmBC,MAAO,KACjC,CAACD,KAAM,iBAAkBC,MAAO,MAChC,CAACD,KAAM,6BAA8BC,MAAO,MAC5C,CAACD,KAAM,+BAAgCC,MAAO,MAC9C,CAACD,KAAM,oBAAqBC,MAAO,MACnC,CAACD,KAAM,8BAA+BC,MAAO,MAC7C,CAACD,KAAM,gCAAiCC,MAAO,MAC/C,CAACD,KAAM,6BAA8BC,MAAO,IAC5C,CAACD,KAAM,4BAA6BC,MAAO,MAC3C,CAACD,KAAM,sBAAuBC,MAAO,GACrC,CAACD,KAAM,6BAA8BC,MAAO,KAC5C,CAACD,KAAM,UAAWC,MAAO,GACzB,CAACD,KAAM,sBAAuBC,MAAO,gBApBjCvB,aCMEmC,QACW,cAA7BC,OAAOC,SAASC,UAEe,UAA7BF,OAAOC,SAASC,UAEhBF,OAAOC,SAASC,SAASC,MACvB,2DCZNC,IAASC,OAAOnD,EAAAC,EAAAC,cAACkD,EAAD,MAASC,SAASC,eAAe,SD2H3C,kBAAmBC,WACrBA,UAAUC,cAAcC,MAAMC,KAAK,SAAAC,GACjCA,EAAaC","file":"static/js/main.88e62241.chunk.js","sourcesContent":["import React, { Component } from 'react';\n\nclass PromotionalHeader extends Component {\n  render() {\n    return (\n      <div className=\"PromotionalHeader\">\n        <img src=\"comps_logo.png\" alt=\"competitions logo\" id=\"logo\"/>\n        <h3>Join our Slack group!</h3>\n        <a href=\"https://join.slack.com/t/scscompetitions/shared_invite/MjE0MzMxMTExNjE3LTE1MDA0Nzc4NjQtMThlYTU1OTMyMw\" rel=\"noopener noreferrer\" target=\"_blank\">\n          <img src=\"slack_logo.png\" alt=\"slack logo\" id=\"slack\"/>\n        </a>\n      </div>\n    );\n  }\n}\n\nexport default PromotionalHeader;\n","import React, { Component } from 'react';\nimport Card from '@material-ui/core/Card';\nimport CardContent from '@material-ui/core/CardContent';\nimport Table from '@material-ui/core/Table';\nimport TableBody from '@material-ui/core/TableBody';\nimport TableCell from '@material-ui/core/TableCell';\nimport TableHead from '@material-ui/core/TableHead';\nimport TableRow from '@material-ui/core/TableRow';\nimport { Typography } from '@material-ui/core';\n\nclass ResultCard extends Component {\n  render() {\n    return (\n      <Card>\n        <CardContent>\n          <Typography variant=\"headline\">{this.props.title}</Typography>\n          <Table>\n            <TableHead>\n              <TableRow>\n                <TableCell>Team</TableCell>\n                <TableCell numeric>Normalized Score</TableCell>\n              </TableRow>\n            </TableHead>\n            <TableBody>\n              {this.props.data.map((n,k) => {\n                return (\n                  <TableRow key={k}>\n                    <TableCell component=\"th\" scope=\"row\">\n                      {n.name}\n                    </TableCell>\n                    <TableCell numeric>{n.score}</TableCell>\n                  </TableRow>\n                );\n              })}\n            </TableBody>\n          </Table>\n        </CardContent>\n      </Card>\n    );\n  }\n}\n\nexport default ResultCard;\n","import React, { Component } from 'react';\nimport PromotionalHeader from './components/PromotionalHeader';\nimport Grid from '@material-ui/core/Grid';\nimport './App.css';\nimport ResultCard from './components/ResultCard';\n\nclass App extends Component {\n  render() {\n    return (\n      <div className=\"App\">\n        <PromotionalHeader/>\n        <Grid container spacing={0} justify={\"center\"} id=\"content\">\n          <Grid item xs={12} md={8} lg={6}>\n            <ResultCard title=\"Extreme Programming Competition\" data={[\n              {name: \"Ben B, Yashar D\", score: 100.0},\n              {name: \"Bryce D, Kevin\", score: 88.3},\n              {name: \"Mike B, Mathieu D, Felix L\", score: 75.4},\n              {name: \"Mike O, Morteza A, Brendan M\", score: 70.2},\n              {name: \"Tobi, Erin, Chris\", score: 63.9},\n              {name: \"Matthew F, Jesse S, David R\", score: 54.2},\n              {name: \"Haocheng Y, Minghao W, Joey Z\", score: 50.6},\n              {name: \"Jun L, Brianne O, Darrin F\", score: 36.0},\n              {name: \"Sean H, Tom L, Yaroslav B\", score: 20.8},\n              {name: \"Joseph L, Manseph M\", score: 5.0},\n              {name: \"Joshua C, Daniel E, Eric B\", score: 1.3},\n              {name: \"Flyes H\", score: 0.0},\n              {name: \"William M, Briana T\", score: 0.0}\n            ]}/>\n          </Grid>\n        </Grid>\n      </div>\n    );\n  }\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read http://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit http://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See http://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: http://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}